{"ast":null,"code":"import config from '../config/youtube';\nclass YouTubeService {\n  constructor() {\n    this.apiKey = config.youtube.apiKey;\n    this.channelId = config.youtube.channelId;\n    this.baseUrl = config.youtube.baseUrl;\n  }\n  isApiAvailable() {\n    return !!this.apiKey && this.apiKey.length > 0;\n  }\n\n  // Função para fazer requests com tratamento de CORS\n  async makeRequest(url) {\n    try {\n      // Tentar com modo 'cors' primeiro\n      const response = await fetch(url, {\n        mode: 'cors',\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Erro CORS:', error);\n\n      // Fallback: tentar usar proxy CORS\n      try {\n        const proxyUrl = `https://cors-anywhere.herokuapp.com/${url}`;\n        const response = await fetch(proxyUrl);\n        return await response.json();\n      } catch (proxyError) {\n        console.error('Erro no proxy CORS:', proxyError);\n        throw error;\n      }\n    }\n  }\n  async getLiveStreams() {\n    if (!this.isApiAvailable()) {\n      return this.getFallbackData();\n    }\n    try {\n      const url = `${this.baseUrl}/search?key=${this.apiKey}&channelId=${this.channelId}&eventType=live&type=video&part=snippet&maxResults=1`;\n      return await this.makeRequest(url);\n    } catch (error) {\n      console.error('YouTube API Error:', error);\n      return this.getFallbackData();\n    }\n  }\n  async getRecentVideos(maxResults = 6) {\n    if (!this.isApiAvailable()) {\n      return this.getFallbackVideos();\n    }\n    try {\n      const url = `${this.baseUrl}/search?key=${this.apiKey}&channelId=${this.channelId}&order=date&type=video&part=snippet&maxResults=${maxResults}`;\n      const data = await this.makeRequest(url);\n      if (data.error) {\n        console.error('Erro da API:', data.error);\n        return this.getFallbackVideos();\n      }\n      if (data.items && data.items.length > 0) {\n        return await this.getVideoDetails(data.items);\n      } else {\n        return this.getFallbackVideos();\n      }\n    } catch (error) {\n      console.error('YouTube API Error:', error);\n      return this.getFallbackVideos();\n    }\n  }\n  async getVideoDetails(videos) {\n    if (!videos || videos.length === 0) return [];\n    const videoIds = videos.map(item => item.id.videoId).join(',');\n    try {\n      const url = `${this.baseUrl}/videos?key=${this.apiKey}&id=${videoIds}&part=contentDetails,statistics,snippet`;\n      const detailsData = await this.makeRequest(url);\n      return videos.map((item, index) => {\n        var _details$contentDetai, _details$statistics;\n        const details = detailsData.items[index];\n        return {\n          id: item.id.videoId,\n          titulo: item.snippet.title,\n          data: new Date(item.snippet.publishedAt).toLocaleDateString('pt-BR'),\n          thumbnail: item.snippet.thumbnails.medium.url,\n          videoId: item.id.videoId,\n          duracao: (details === null || details === void 0 ? void 0 : (_details$contentDetai = details.contentDetails) === null || _details$contentDetai === void 0 ? void 0 : _details$contentDetai.duration) || 'PT0M0S',\n          visualizacoes: (details === null || details === void 0 ? void 0 : (_details$statistics = details.statistics) === null || _details$statistics === void 0 ? void 0 : _details$statistics.viewCount) || '0'\n        };\n      });\n    } catch (error) {\n      console.error('Erro ao buscar detalhes:', error);\n      return this.getFallbackVideos();\n    }\n  }\n  getFallbackData() {\n    return {\n      items: []\n    };\n  }\n  getFallbackVideos() {\n    return [{\n      id: 'video1',\n      titulo: 'Congresso do Círculo de Oração - Colunas de Fé',\n      data: '25 Jul 2025',\n      videoId: 'rT8YqGItaR0',\n      thumbnail: 'https://img.youtube.com/vi/rT8YqGItaR0/hqdefault.jpg',\n      duracao: '2:07:55',\n      visualizacoes: '131',\n      duracaoLegivel: '2:07:55'\n    }\n    // ... seus outros vídeos de fallback\n    ];\n  }\n}\nexport default new YouTubeService();","map":{"version":3,"names":["config","YouTubeService","constructor","apiKey","youtube","channelId","baseUrl","isApiAvailable","length","makeRequest","url","response","fetch","mode","headers","ok","Error","status","json","error","console","proxyUrl","proxyError","getLiveStreams","getFallbackData","getRecentVideos","maxResults","getFallbackVideos","data","items","getVideoDetails","videos","videoIds","map","item","id","videoId","join","detailsData","index","_details$contentDetai","_details$statistics","details","titulo","snippet","title","Date","publishedAt","toLocaleDateString","thumbnail","thumbnails","medium","duracao","contentDetails","duration","visualizacoes","statistics","viewCount","duracaoLegivel"],"sources":["C:/Users/Toccini/Videos/Site Igreja/src/services/youtubeService.js"],"sourcesContent":["import config from '../config/youtube';\r\n\r\nclass YouTubeService {\r\n  constructor() {\r\n    this.apiKey = config.youtube.apiKey;\r\n    this.channelId = config.youtube.channelId;\r\n    this.baseUrl = config.youtube.baseUrl;\r\n  }\r\n\r\n  isApiAvailable() {\r\n    return !!this.apiKey && this.apiKey.length > 0;\r\n  }\r\n\r\n  // Função para fazer requests com tratamento de CORS\r\n  async makeRequest(url) {\r\n    try {\r\n      // Tentar com modo 'cors' primeiro\r\n      const response = await fetch(url, {\r\n        mode: 'cors',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}`);\r\n      }\r\n      \r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('Erro CORS:', error);\r\n      \r\n      // Fallback: tentar usar proxy CORS\r\n      try {\r\n        const proxyUrl = `https://cors-anywhere.herokuapp.com/${url}`;\r\n        const response = await fetch(proxyUrl);\r\n        return await response.json();\r\n      } catch (proxyError) {\r\n        console.error('Erro no proxy CORS:', proxyError);\r\n        throw error;\r\n      }\r\n    }\r\n  }\r\n\r\n  async getLiveStreams() {\r\n    if (!this.isApiAvailable()) {\r\n      return this.getFallbackData();\r\n    }\r\n\r\n    try {\r\n      const url = `${this.baseUrl}/search?key=${this.apiKey}&channelId=${this.channelId}&eventType=live&type=video&part=snippet&maxResults=1`;\r\n      return await this.makeRequest(url);\r\n    } catch (error) {\r\n      console.error('YouTube API Error:', error);\r\n      return this.getFallbackData();\r\n    }\r\n  }\r\n\r\n  async getRecentVideos(maxResults = 6) {\r\n    if (!this.isApiAvailable()) {\r\n      return this.getFallbackVideos();\r\n    }\r\n\r\n    try {\r\n      const url = `${this.baseUrl}/search?key=${this.apiKey}&channelId=${this.channelId}&order=date&type=video&part=snippet&maxResults=${maxResults}`;\r\n      const data = await this.makeRequest(url);\r\n      \r\n      if (data.error) {\r\n        console.error('Erro da API:', data.error);\r\n        return this.getFallbackVideos();\r\n      }\r\n\r\n      if (data.items && data.items.length > 0) {\r\n        return await this.getVideoDetails(data.items);\r\n      } else {\r\n        return this.getFallbackVideos();\r\n      }\r\n    } catch (error) {\r\n      console.error('YouTube API Error:', error);\r\n      return this.getFallbackVideos();\r\n    }\r\n  }\r\n\r\n  async getVideoDetails(videos) {\r\n    if (!videos || videos.length === 0) return [];\r\n    \r\n    const videoIds = videos.map(item => item.id.videoId).join(',');\r\n    \r\n    try {\r\n      const url = `${this.baseUrl}/videos?key=${this.apiKey}&id=${videoIds}&part=contentDetails,statistics,snippet`;\r\n      const detailsData = await this.makeRequest(url);\r\n      \r\n      return videos.map((item, index) => {\r\n        const details = detailsData.items[index];\r\n        return {\r\n          id: item.id.videoId,\r\n          titulo: item.snippet.title,\r\n          data: new Date(item.snippet.publishedAt).toLocaleDateString('pt-BR'),\r\n          thumbnail: item.snippet.thumbnails.medium.url,\r\n          videoId: item.id.videoId,\r\n          duracao: details?.contentDetails?.duration || 'PT0M0S',\r\n          visualizacoes: details?.statistics?.viewCount || '0',\r\n        };\r\n      });\r\n    } catch (error) {\r\n      console.error('Erro ao buscar detalhes:', error);\r\n      return this.getFallbackVideos();\r\n    }\r\n  }\r\n\r\n  getFallbackData() {\r\n    return { items: [] };\r\n  }\r\n\r\n  getFallbackVideos() {\r\n    return [\r\n      {\r\n        id: 'video1',\r\n        titulo: 'Congresso do Círculo de Oração - Colunas de Fé',\r\n        data: '25 Jul 2025',\r\n        videoId: 'rT8YqGItaR0',\r\n        thumbnail: 'https://img.youtube.com/vi/rT8YqGItaR0/hqdefault.jpg',\r\n        duracao: '2:07:55',\r\n        visualizacoes: '131',\r\n        duracaoLegivel: '2:07:55'\r\n      },\r\n      // ... seus outros vídeos de fallback\r\n    ];\r\n  }\r\n}\r\n\r\nexport default new YouTubeService();"],"mappings":"AAAA,OAAOA,MAAM,MAAM,mBAAmB;AAEtC,MAAMC,cAAc,CAAC;EACnBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAGH,MAAM,CAACI,OAAO,CAACD,MAAM;IACnC,IAAI,CAACE,SAAS,GAAGL,MAAM,CAACI,OAAO,CAACC,SAAS;IACzC,IAAI,CAACC,OAAO,GAAGN,MAAM,CAACI,OAAO,CAACE,OAAO;EACvC;EAEAC,cAAcA,CAAA,EAAG;IACf,OAAO,CAAC,CAAC,IAAI,CAACJ,MAAM,IAAI,IAAI,CAACA,MAAM,CAACK,MAAM,GAAG,CAAC;EAChD;;EAEA;EACA,MAAMC,WAAWA,CAACC,GAAG,EAAE;IACrB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;QAChCG,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE;UACP,QAAQ,EAAE;QACZ;MACF,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,QAAQL,QAAQ,CAACM,MAAM,EAAE,CAAC;MAC5C;MAEA,OAAO,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;;MAElC;MACA,IAAI;QACF,MAAME,QAAQ,GAAG,uCAAuCX,GAAG,EAAE;QAC7D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACS,QAAQ,CAAC;QACtC,OAAO,MAAMV,QAAQ,CAACO,IAAI,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOI,UAAU,EAAE;QACnBF,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEG,UAAU,CAAC;QAChD,MAAMH,KAAK;MACb;IACF;EACF;EAEA,MAAMI,cAAcA,CAAA,EAAG;IACrB,IAAI,CAAC,IAAI,CAAChB,cAAc,CAAC,CAAC,EAAE;MAC1B,OAAO,IAAI,CAACiB,eAAe,CAAC,CAAC;IAC/B;IAEA,IAAI;MACF,MAAMd,GAAG,GAAG,GAAG,IAAI,CAACJ,OAAO,eAAe,IAAI,CAACH,MAAM,cAAc,IAAI,CAACE,SAAS,sDAAsD;MACvI,OAAO,MAAM,IAAI,CAACI,WAAW,CAACC,GAAG,CAAC;IACpC,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,OAAO,IAAI,CAACK,eAAe,CAAC,CAAC;IAC/B;EACF;EAEA,MAAMC,eAAeA,CAACC,UAAU,GAAG,CAAC,EAAE;IACpC,IAAI,CAAC,IAAI,CAACnB,cAAc,CAAC,CAAC,EAAE;MAC1B,OAAO,IAAI,CAACoB,iBAAiB,CAAC,CAAC;IACjC;IAEA,IAAI;MACF,MAAMjB,GAAG,GAAG,GAAG,IAAI,CAACJ,OAAO,eAAe,IAAI,CAACH,MAAM,cAAc,IAAI,CAACE,SAAS,kDAAkDqB,UAAU,EAAE;MAC/I,MAAME,IAAI,GAAG,MAAM,IAAI,CAACnB,WAAW,CAACC,GAAG,CAAC;MAExC,IAAIkB,IAAI,CAACT,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAES,IAAI,CAACT,KAAK,CAAC;QACzC,OAAO,IAAI,CAACQ,iBAAiB,CAAC,CAAC;MACjC;MAEA,IAAIC,IAAI,CAACC,KAAK,IAAID,IAAI,CAACC,KAAK,CAACrB,MAAM,GAAG,CAAC,EAAE;QACvC,OAAO,MAAM,IAAI,CAACsB,eAAe,CAACF,IAAI,CAACC,KAAK,CAAC;MAC/C,CAAC,MAAM;QACL,OAAO,IAAI,CAACF,iBAAiB,CAAC,CAAC;MACjC;IACF,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,OAAO,IAAI,CAACQ,iBAAiB,CAAC,CAAC;IACjC;EACF;EAEA,MAAMG,eAAeA,CAACC,MAAM,EAAE;IAC5B,IAAI,CAACA,MAAM,IAAIA,MAAM,CAACvB,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;IAE7C,MAAMwB,QAAQ,GAAGD,MAAM,CAACE,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IAE9D,IAAI;MACF,MAAM3B,GAAG,GAAG,GAAG,IAAI,CAACJ,OAAO,eAAe,IAAI,CAACH,MAAM,OAAO6B,QAAQ,yCAAyC;MAC7G,MAAMM,WAAW,GAAG,MAAM,IAAI,CAAC7B,WAAW,CAACC,GAAG,CAAC;MAE/C,OAAOqB,MAAM,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEK,KAAK,KAAK;QAAA,IAAAC,qBAAA,EAAAC,mBAAA;QACjC,MAAMC,OAAO,GAAGJ,WAAW,CAACT,KAAK,CAACU,KAAK,CAAC;QACxC,OAAO;UACLJ,EAAE,EAAED,IAAI,CAACC,EAAE,CAACC,OAAO;UACnBO,MAAM,EAAET,IAAI,CAACU,OAAO,CAACC,KAAK;UAC1BjB,IAAI,EAAE,IAAIkB,IAAI,CAACZ,IAAI,CAACU,OAAO,CAACG,WAAW,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC;UACpEC,SAAS,EAAEf,IAAI,CAACU,OAAO,CAACM,UAAU,CAACC,MAAM,CAACzC,GAAG;UAC7C0B,OAAO,EAAEF,IAAI,CAACC,EAAE,CAACC,OAAO;UACxBgB,OAAO,EAAE,CAAAV,OAAO,aAAPA,OAAO,wBAAAF,qBAAA,GAAPE,OAAO,CAAEW,cAAc,cAAAb,qBAAA,uBAAvBA,qBAAA,CAAyBc,QAAQ,KAAI,QAAQ;UACtDC,aAAa,EAAE,CAAAb,OAAO,aAAPA,OAAO,wBAAAD,mBAAA,GAAPC,OAAO,CAAEc,UAAU,cAAAf,mBAAA,uBAAnBA,mBAAA,CAAqBgB,SAAS,KAAI;QACnD,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOtC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,OAAO,IAAI,CAACQ,iBAAiB,CAAC,CAAC;IACjC;EACF;EAEAH,eAAeA,CAAA,EAAG;IAChB,OAAO;MAAEK,KAAK,EAAE;IAAG,CAAC;EACtB;EAEAF,iBAAiBA,CAAA,EAAG;IAClB,OAAO,CACL;MACEQ,EAAE,EAAE,QAAQ;MACZQ,MAAM,EAAE,gDAAgD;MACxDf,IAAI,EAAE,aAAa;MACnBQ,OAAO,EAAE,aAAa;MACtBa,SAAS,EAAE,sDAAsD;MACjEG,OAAO,EAAE,SAAS;MAClBG,aAAa,EAAE,KAAK;MACpBG,cAAc,EAAE;IAClB;IACA;IAAA,CACD;EACH;AACF;AAEA,eAAe,IAAIzD,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}